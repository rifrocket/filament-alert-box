name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }}
    
    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2, 8.3]
        laravel: [10, 11]
        stability: [prefer-stable]
        include:
          - laravel: 10
            testbench: 8.*
          - laravel: 11
            testbench: 9.*
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: xdebug
          
      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
          
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-
            dependencies-laravel-${{ matrix.laravel }}-php-
            dependencies-laravel-
            
      - name: Install Composer dependencies
        run: |
          composer require "laravel/framework:^${{ matrix.laravel }}.0" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress
          
      - name: Validate composer.json and composer.lock
        run: composer validate --strict
        
      - name: List Installed Dependencies
        run: composer show -D
        
      - name: Execute tests (if test suite exists)
        run: |
          if [ -f "vendor/bin/phpunit" ]; then
            vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover
          elif [ -f "vendor/bin/pest" ]; then
            vendor/bin/pest --coverage --coverage-clover=coverage.clover
          else
            echo "No test suite found, skipping tests..."
          fi
          
      - name: Check code style (if applicable)
        run: |
          if [ -f "vendor/bin/pint" ]; then
            vendor/bin/pint --test
          elif [ -f "vendor/bin/php-cs-fixer" ]; then
            vendor/bin/php-cs-fixer fix --dry-run --diff
          else
            echo "No code style checker found, skipping..."
          fi
          
      - name: Run static analysis (if applicable)
        run: |
          if [ -f "vendor/bin/phpstan" ]; then
            vendor/bin/phpstan analyse
          else
            echo "No static analysis tool found, skipping..."
          fi
